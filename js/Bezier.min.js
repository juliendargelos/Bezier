var Bezier=function(){var t=this,n=[],e=5,r=300,i=100,s="ease",a=document.createElementNS("http://www.w3.org/2000/svg","svg"),o=document.createElementNS(a.namespaceURI,"path"),u=!0,c=!1,p={linear:function(t,n){return t/n},easeOut:function(t,n){return 1-g((n-t)/n,2)},easeIn:function(t,n){return g(t/n,2)},ease:function(t,n){return t/n<.5?g(t/(n/2),2)/2:1-g((n-t)/(n/2),2)/2}};a.appendChild(o);var f=function(t){if("undefined"!=typeof f.s[t])return f.s[t];var n=f.s[f.i-1];for(f.i;f.i<=t;f.i++)f.s[f.i]=n=n.multiply(f.i.toString());return n};f.s=[new BigNumber("1"),new BigNumber("1")],f.i=2;var h=function(t,n){return f(t)/(f(n)*f(t-n))},g=function(t,n){return Math.pow(t,n)},l=function(n,e){e=parseInt(e);var r=g(10,isNaN(e)?t.round:e);return Math.round(n*r)/r},d=function(t){return JSON.parse(JSON.stringify(t))},y=function(n){t.drawOnChange&&(t.animateOnChange&&Array.isArray(n)?t.animate({"0%":n,"100%":d(t.points)}):t.draw())};this.add=function(e,r){if(Array.isArray(e)){for(var i=[],s=0;s<e.length;s++){var a=this.add(e[s]);a!==!1&&i.push(a)}return!(0==i.length&&e.length>0)&&i}if("object"==typeof e&&null!==e&&(r=e.y,e=e.x),e=parseFloat(e),r=parseFloat(r),isNaN(e)||isNaN(r))return!1;var o={get x(){return e},set x(n){n=parseFloat(n);var r=d(t.points);isNaN(n)||(e=n,y(r))},get y(){return r},set y(n){n=parseFloat(n);var e=d(t.points);isNaN(n)||(r=n,y(e))}};return n.push(o),this.draw(),o},this.compute=function(t,n){var e=this.points,r=e.length-1;if(r>0){for(var i=1-t,s={x:0,y:0},a=0;a<=r;a++){var o=e[a],u=h(r,a)*g(i,r-a)*g(t,a);s.x+=u*o.x,s.y+=u*o.y}return{x:l(s.x,n),y:l(s.y,n)}}return{x:0,y:0}},this.each=function(t,n,e){if("function"==typeof t){n=parseFloat(n),isNaN(n)&&(n=1/this.path.getTotalLength());for(var r=0;r<=1;r+=n)t(this.compute(r,e),r);t(this.compute(1,e),1)}},this.draw=function(){var t="M";this.each(function(n){t+=n.x+" "+n.y+" L"}),t=t.substr(0,t.length-2),this.path.setAttribute("d",t)},this.animate=function(e,r,i,s){if("object"==typeof e&&null!==e){r=parseInt(r),r=isNaN(r)?this.animationDuration:r,i="function"==typeof p[i]?p[i]:p[this.animationCurve],s=parseInt(s),s=isNaN(s)?this.animationFps:s;var a=1e3/s,o=[];for(var u in e)o.push({progress:parseFloat(u)/100,points:e[u]});if(e=o,e.sort(function(t,n){return t.progress-n.progress}),1==e.length&&(e=[{progress:0,points:t.points}].concat(e)),e.length>=1){var c,f=e[0],h=e[1],g=h.progress-f.progress,l={start:0,last:0,current:0,get delta(){return this.current-this.last},init:function(){this.start=(new Date).getTime()},updateCurrent:function(){this.current=(new Date).getTime()-this.start},updateLast:function(){this.last=this.current}},d=function(){if(l.updateCurrent(),l.delta>a){var s=l.current>=r?1:i(l.current,r),o=(s-f.progress)/g;n=[];for(var u=0;u<h.points.length;u++){var p=f.points[u],y=h.points[u];t.add(p.x+(y.x-p.x)*o,p.y+(y.y-p.y)*o)}if(s>=h.progress){if(e=e.slice(1),!(e.length>1&&s<1))return void window.cancelAnimationFrame(c);f=e[0],h=e[1],g=h.progress-f.progress,f.points.length>h.points.length?fromPoints=f.points.slice(0,h.points.length):f.points.length<h.points.length&&(lp=f.points.length>0?f.points[f.points.length-1]:{x:0,y:0},fromPoints=f.points.concat(Array(h.points.length-f.points.length).fill({x:lp.x,y:lp.y})))}}l.updateLast(),c=window.requestAnimationFrame(d)};l.init(),d()}}},Object.defineProperties(this,{svg:{get:function(){return a}},namespace:{get:function(){return a.namespaceURI}},path:{get:function(){return o}},points:{get:function(){return n},set:function(t){var e=d(this.points);n=[],this.add(t)&&y(e)}},step:{get:function(){return step},set:function(t){t=parseFloat(t),isNaN(t)||(step=t,y())}},round:{get:function(){return e},set:function(t){t=parseInt(t),isNaN(t)||(e=t,y())}},animationDuration:{get:function(){return r},set:function(t){t=parseInt(t),isNaN(t)||(r=t)}},animationFps:{get:function(){return i},set:function(t){t=parseInt(t),isNaN(t)||(i=t)}},animationCurve:{get:function(){return s},set:function(t){"function"==typeof animationsCurves[t]&&(s=t)}},drawOnChange:{get:function(){return u},set:function(t){u=!!t}},animateOnChange:{get:function(){return c},set:function(t){c=!!t}}}),this.points=Array.prototype.slice.call(0==arguments.length?[0]:arguments).reduce(function(t,n){return(Array.isArray(t)?t:[t]).concat(Array.isArray(n)?n:[n])})};